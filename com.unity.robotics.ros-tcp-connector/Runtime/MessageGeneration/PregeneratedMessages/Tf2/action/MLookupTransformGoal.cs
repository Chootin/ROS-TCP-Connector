//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;
using RosMessageTypes.Std;

namespace RosMessageTypes.Tf2
{
    public class MLookupTransformGoal : Message
    {
        public const string RosMessageName = "tf2_msgs/LookupTransform";

        // Simple API
        public string target_frame;
        public string source_frame;
        public MTime source_time;
        public MDuration timeout;
        // Advanced API
        public MTime target_time;
        public string fixed_frame;
        // Whether or not to use the advanced API
        public bool advanced;

        public MLookupTransformGoal()
        {
            this.target_frame = "";
            this.source_frame = "";
            this.source_time = new MTime();
            this.timeout = new MDuration();
            this.target_time = new MTime();
            this.fixed_frame = "";
            this.advanced = false;
        }

        public MLookupTransformGoal(string target_frame, string source_frame, MTime source_time, MDuration timeout, MTime target_time, string fixed_frame, bool advanced)
        {
            this.target_frame = target_frame;
            this.source_frame = source_frame;
            this.source_time = source_time;
            this.timeout = timeout;
            this.target_time = target_time;
            this.fixed_frame = fixed_frame;
            this.advanced = advanced;
        }
        public override List<byte[]> SerializationStatements()
        {
            var listOfSerializations = new List<byte[]>();
            listOfSerializations.Add(SerializeString(this.target_frame));
            listOfSerializations.Add(SerializeString(this.source_frame));
            listOfSerializations.AddRange(source_time.SerializationStatements());
            listOfSerializations.AddRange(timeout.SerializationStatements());
            listOfSerializations.AddRange(target_time.SerializationStatements());
            listOfSerializations.Add(SerializeString(this.fixed_frame));
            listOfSerializations.Add(BitConverter.GetBytes(this.advanced));

            return listOfSerializations;
        }

        public override int Deserialize(byte[] data, int offset)
        {
            var target_frameStringBytesLength = DeserializeLength(data, offset);
            offset += 4;
            this.target_frame = DeserializeString(data, offset, target_frameStringBytesLength);
            offset += target_frameStringBytesLength;
            var source_frameStringBytesLength = DeserializeLength(data, offset);
            offset += 4;
            this.source_frame = DeserializeString(data, offset, source_frameStringBytesLength);
            offset += source_frameStringBytesLength;
            offset = this.source_time.Deserialize(data, offset);
            offset = this.timeout.Deserialize(data, offset);
            offset = this.target_time.Deserialize(data, offset);
            var fixed_frameStringBytesLength = DeserializeLength(data, offset);
            offset += 4;
            this.fixed_frame = DeserializeString(data, offset, fixed_frameStringBytesLength);
            offset += fixed_frameStringBytesLength;
            this.advanced = BitConverter.ToBoolean(data, offset);
            offset += 1;

            return offset;
        }

        public override string ToString()
        {
            return "MLookupTransformGoal: " +
            "\ntarget_frame: " + target_frame.ToString() +
            "\nsource_frame: " + source_frame.ToString() +
            "\nsource_time: " + source_time.ToString() +
            "\ntimeout: " + timeout.ToString() +
            "\ntarget_time: " + target_time.ToString() +
            "\nfixed_frame: " + fixed_frame.ToString() +
            "\nadvanced: " + advanced.ToString();
        }
    }
}
